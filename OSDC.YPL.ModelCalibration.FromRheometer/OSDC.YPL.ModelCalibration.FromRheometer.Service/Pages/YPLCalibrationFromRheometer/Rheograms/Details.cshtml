@page
@model OSDC.YPL.ModelCalibration.FromRheometer.Service.Pages.Rheograms.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Rheogram</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rheogram.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rheogram.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rheogram.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rheogram.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rheogram.ShearStressStandardDeviation)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rheogram.ShearStressStandardDeviation)
        </dd>
    </dl>
    <h4>Calibrated Yield Power Law model with Zamora/Kelessidis</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithZamora.Tau0)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithZamora.Tau0)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithZamora.K)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithZamora.K)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithZamora.n)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithZamora.n)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithZamora.Chi2)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithZamora.Chi2)
        </dd>
    </dl>
    <h4>Calibrated Yield Power Law model with Mullineux</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithMullineux.Tau0)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithMullineux.Tau0)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithMullineux.K)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithMullineux.K)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithMullineux.n)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithMullineux.n)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.YPLModelCalibratedWithMullineux.Chi2)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.YPLModelCalibratedWithMullineux.Chi2)
        </dd>
    </dl>
    <h4>Rheogram measurements and estimations</h4>
    <hr />
    <table id="RheogramMeasurements" class="table" cellspacing="0">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ExampleRheometerMeasurement.ShearRate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExampleRheometerMeasurement.MeasuredShearStress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExampleRheometerMeasurement.EstimatedShearStressZamora)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExampleRheometerMeasurement.EstimatedShearStressMullineux)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Measurements)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShearRate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MeasuredShearStress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EstimatedShearStressZamora)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EstimatedShearStressMullineux)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="chart"></div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Rheogram.ID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {
            var jsonData = $.ajax({
                url: "/YPLCalibrationFromRheometer/Rheograms/Details?handler=ChartData",
                dataType: "json",
                async: false
            }).responseText;
            var data = new google.visualization.DataTable(jsonData);
            var options = {
                title: 'Rheogram',
                width: 1000,
                height: 600,
                hAxis: { title: 'Shear rate (1/s)', scaleType: 'log' },
                vAxis: { title: 'Shear stress (Pa)', scaleType: 'log' },
                colors: ['black', 'blue', 'red'],
                series: {
                    0: { pointShape: 'circle', pointSize: 5, lineWidth: 0 },
                    1: { pointShape: 'triangle', pointSize: 0, lineWidth: 2 },
                    2: { pointShape: 'square', pointSize: 0, lineWidth: 2 }
                },
                legend: { position: 'bottom', alignment: 'start', maxLines: 1 }
            };

            var chart = new google.visualization.LineChart(document.getElementById('chart'));
            chart.draw(data, options);
        }

    </script>
}