@page

@model OSDC.YPL.ModelCalibration.FromRheometer.Service.Pages.Rheograms.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Rheogram</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="WorkingRheogram.ID" />
            <div class="form-group">
                <label asp-for="WorkingRheogram.Name" class="control-label"></label>
                <input asp-for="WorkingRheogram.Name" class="form-control" />
                <span asp-validation-for="WorkingRheogram.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WorkingRheogram.Description" class="control-label"></label>
                <input asp-for="WorkingRheogram.Description" class="form-control" />
                <span asp-validation-for="WorkingRheogram.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WorkingRheogram.ShearStressStandardDeviation" class="control-label"></label>
                <input asp-for="WorkingRheogram.ShearStressStandardDeviation" class="form-control" />
                <span asp-validation-for="WorkingRheogram.ShearStressStandardDeviation" class="text-danger"></span>
            </div>
            <h4>Rheogram measurements and estimations</h4>
            <hr />
            <table id="RheogramMeasurements" class="table" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ExampleRheometerMeasurement.ShearRate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ExampleRheometerMeasurement.ShearStress)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Model.RheometerMeasurement item in Model.WorkingRheogram.Measurements)
                    {
                    <tr>
                        <td>
                            <span class="label" style="display:none">@item.ID</span>
                        </td>
                        <td>
                            <span class="label">@item.ShearRate</span>
                            <input class="text" type="text" value="@item.ShearRate" style="display:none" />
                        </td>
                        <td>
                            <span class="label">@item.ShearStress</span>
                            <input class="text" type="text" value="@item.ShearStress" style="display:none" />
                        </td>
                        <td>
                            <a class="Edit" href="javascript:;">Edit</a>
                            <a class="Update" href="javascript:;" style="display:none">Update</a>
                            <a class="Cancel" href="javascript:;" style="display:none">Cancel</a>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="https://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
    <script type="text/javascript">
        //Edit event handler.
        $("body").on("click", "#RheogramMeasurements TBODY .Edit", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find(".text").length > 0) {
                    $(this).find(".text").show();
                    $(this).find(".label").hide();
                }
            });
            row.find(".Update").show();
            row.find(".Cancel").show();
            $(this).hide();
        });

        //Update event handler.
        $("body").on("click", "#RheogramMeasurements TBODY .Update", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find(".text").length > 0) {
                    var span = $(this).find(".label");
                    var input = $(this).find(".text");
                    span.html(input.val());
                    span.show();
                    input.hide();
                }
            });
            row.find(".Edit").show();
            row.find(".Cancel").hide();
            $(this).hide();

            var rheometerMeasurement = {};
            rheometerMeasurement.ID = parseInt(row.find("td:eq(0)").find(".label").html());
            rheometerMeasurement.ShearRate = parseFloat(row.find("td:eq(1)").find(".label").html());
            rheometerMeasurement.ShearStress = parseFloat(row.find("td:eq(2)").find(".label").html());
            $.ajax({
                type: "PUT",
                url: "/YPLCalibrationFromRheometer/api/RheometerMeasurements/" + parseInt(row.find("td:eq(0)").find(".label").html()),
                data: JSON.stringify(rheometerMeasurement),
                contentType: "application/json",
                dataType: "json"
            });
        });
        //Cancel event handler.
        $("body").on("click", "#RheogramMeasurements TBODY .Cancel", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find(".text").length > 0) {
                    var span = $(this).find(".label");
                    var input = $(this).find(".text");
                    input.val(span.html());
                    span.show();
                    input.hide();
                }
            });
            row.find(".Edit").show();
            row.find(".Update").hide();
            $(this).hide();
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
