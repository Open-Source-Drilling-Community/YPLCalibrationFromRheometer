### YamlMime:ManagedReference
items:
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  commentId: T:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  id: IdentifiedObject`1
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model
  children:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(`0)
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(`0,System.Int32)
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0},System.Boolean)
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0})
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.ID
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Object
  langs:
  - csharp
  - vb
  name: IdentifiedObject<T>
  nameWithType: IdentifiedObject<T>
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>
  type: Class
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: IdentifiedObject
    path: IdentifiedObject.cs
    startLine: 8
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  syntax:
    content: 'public class IdentifiedObject<T> : IIdentifiable, ICopyable<IdentifiedObject<T>>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class IdentifiedObject(Of T)

          Implements IIdentifiable, ICopyable(Of IdentifiedObject(Of T))
  inheritance:
  - System.Object
  implements:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: IdentifiedObject(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T)
  name.vb: IdentifiedObject(Of T)
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Object
  commentId: P:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Object
  id: Object
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: IdentifiedObject<T>.Object
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.Object
  type: Property
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: Object
    path: IdentifiedObject.cs
    startLine: 13
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\naccessor to the object\n"
  example: []
  syntax:
    content: public T Object { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Object As T
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Object*
  nameWithType.vb: IdentifiedObject(Of T).Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).Object
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.ID
  commentId: P:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.ID
  id: ID
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: IdentifiedObject<T>.ID
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.ID
  type: Property
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: ID
    path: IdentifiedObject.cs
    startLine: 17
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\nidentification\n"
  example: []
  syntax:
    content: public int ID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ID As Integer
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.ID*
  implements:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable.ID
  nameWithType.vb: IdentifiedObject(Of T).ID
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).ID
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor
  id: '#ctor'
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: IdentifiedObject()
  nameWithType: IdentifiedObject<T>.IdentifiedObject()
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.IdentifiedObject()
  type: Constructor
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: .ctor
    path: IdentifiedObject.cs
    startLine: 21
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\ndefault constructor\n"
  example: []
  syntax:
    content: public IdentifiedObject()
    content.vb: Public Sub New
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor*
  nameWithType.vb: IdentifiedObject(Of T).IdentifiedObject()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).IdentifiedObject()
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(`0)
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: IdentifiedObject(T)
  nameWithType: IdentifiedObject<T>.IdentifiedObject(T)
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.IdentifiedObject(T)
  type: Constructor
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: .ctor
    path: IdentifiedObject.cs
    startLine: 28
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\nparametrized constructor\n"
  example: []
  syntax:
    content: public IdentifiedObject(T source)
    parameters:
    - id: source
      type: '{T}'
      description: ''
    content.vb: Public Sub New(source As T)
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor*
  nameWithType.vb: IdentifiedObject(Of T).IdentifiedObject(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).IdentifiedObject(T)
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(`0,System.Int32)
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(`0,System.Int32)
  id: '#ctor(`0,System.Int32)'
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: IdentifiedObject(T, Int32)
  nameWithType: IdentifiedObject<T>.IdentifiedObject(T, Int32)
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.IdentifiedObject(T, System.Int32)
  type: Constructor
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: .ctor
    path: IdentifiedObject.cs
    startLine: 37
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\nfully parametrized constructor\n"
  example: []
  syntax:
    content: public IdentifiedObject(T source, int id)
    parameters:
    - id: source
      type: '{T}'
      description: ''
    - id: id
      type: System.Int32
      description: ''
    content.vb: Public Sub New(source As T, id As Integer)
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor*
  nameWithType.vb: IdentifiedObject(Of T).IdentifiedObject(T, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).IdentifiedObject(T, System.Int32)
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0},System.Boolean)
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0},System.Boolean)
  id: '#ctor(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0},System.Boolean)'
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: IdentifiedObject(IdentifiedObject<T>, Boolean)
  nameWithType: IdentifiedObject<T>.IdentifiedObject(IdentifiedObject<T>, Boolean)
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.IdentifiedObject(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: .ctor
    path: IdentifiedObject.cs
    startLine: 46
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\nCopy constructor\n"
  example: []
  syntax:
    content: public IdentifiedObject(IdentifiedObject<T> source, bool complete = false)
    parameters:
    - id: source
      type: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
      description: ''
    - id: complete
      type: System.Boolean
    content.vb: Public Sub New(source As IdentifiedObject(Of T), complete As Boolean = False)
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor*
  nameWithType.vb: IdentifiedObject(Of T).IdentifiedObject(IdentifiedObject(Of T), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).IdentifiedObject(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T), System.Boolean)
  name.vb: IdentifiedObject(IdentifiedObject(Of T), Boolean)
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0})
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0})
  id: Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0})
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  langs:
  - csharp
  - vb
  name: Copy(IdentifiedObject<T>)
  nameWithType: IdentifiedObject<T>.Copy(IdentifiedObject<T>)
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>)
  type: Method
  source:
    remote:
      path: OSDC.YPL.ModelCalibration.FromRheometer/OSDC.YPL.ModelCalibration.FromRheometer.Model/IdentifiedObject.cs
      branch: main
      repo: https://github.com/Open-Source-Drilling-Community/Yield-Power-Law-rheology-calibration.git
    id: Copy
    path: IdentifiedObject.cs
    startLine: 62
  assemblies:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model
  namespace: OSDC.YPL.ModelCalibration.FromRheometer.Model
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Copy(IdentifiedObject<T> target)
    parameters:
    - id: target
      type: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Copy(target As IdentifiedObject(Of T)) As Boolean
  overload: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Copy*
  implements:
  - OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{{T}})
  nameWithType.vb: IdentifiedObject(Of T).Copy(IdentifiedObject(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T))
  name.vb: Copy(IdentifiedObject(Of T))
references:
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model
  commentId: N:OSDC.YPL.ModelCalibration.FromRheometer.Model
  name: OSDC.YPL.ModelCalibration.FromRheometer.Model
  nameWithType: OSDC.YPL.ModelCalibration.FromRheometer.Model
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable
  commentId: T:OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model
  name: IIdentifiable
  nameWithType: IIdentifiable
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}
  commentId: T:OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model
  definition: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
  name: ICopyable<IdentifiedObject<T>>
  nameWithType: ICopyable<IdentifiedObject<T>>
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable<OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>>
  nameWithType.vb: ICopyable(Of IdentifiedObject(Of T))
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable(Of OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T))
  name.vb: ICopyable(Of IdentifiedObject(Of T))
  spec.csharp:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
    name: ICopyable
    nameWithType: ICopyable
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable
  - name: <
    nameWithType: <
    fullName: <
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
    name: IdentifiedObject
    nameWithType: IdentifiedObject
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
    name: ICopyable
    nameWithType: ICopyable
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
    name: IdentifiedObject
    nameWithType: IdentifiedObject
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
  commentId: T:OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
  name: ICopyable<T>
  nameWithType: ICopyable<T>
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable<T>
  nameWithType.vb: ICopyable(Of T)
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable(Of T)
  name.vb: ICopyable(Of T)
  spec.csharp:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
    name: ICopyable
    nameWithType: ICopyable
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1
    name: ICopyable
    nameWithType: ICopyable
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Object*
  commentId: Overload:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Object
  name: Object
  nameWithType: IdentifiedObject<T>.Object
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.Object
  nameWithType.vb: IdentifiedObject(Of T).Object
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).Object
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.ID*
  commentId: Overload:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.ID
  name: ID
  nameWithType: IdentifiedObject<T>.ID
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.ID
  nameWithType.vb: IdentifiedObject(Of T).ID
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).ID
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable.ID
  commentId: P:OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable.ID
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable
  name: ID
  nameWithType: IIdentifiable.ID
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IIdentifiable.ID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor*
  commentId: Overload:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.#ctor
  name: IdentifiedObject
  nameWithType: IdentifiedObject<T>.IdentifiedObject
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.IdentifiedObject
  nameWithType.vb: IdentifiedObject(Of T).IdentifiedObject
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).IdentifiedObject
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  commentId: T:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model
  name: IdentifiedObject<T>
  nameWithType: IdentifiedObject<T>
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>
  nameWithType.vb: IdentifiedObject(Of T)
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T)
  name.vb: IdentifiedObject(Of T)
  spec.csharp:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
    name: IdentifiedObject
    nameWithType: IdentifiedObject
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
    name: IdentifiedObject
    nameWithType: IdentifiedObject
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Copy*
  commentId: Overload:OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1.Copy
  name: Copy
  nameWithType: IdentifiedObject<T>.Copy
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>.Copy
  nameWithType.vb: IdentifiedObject(Of T).Copy
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T).Copy
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{{T}})
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject{`0})
  parent: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable{OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1}
  definition: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
  name: Copy(IdentifiedObject<T>)
  nameWithType: ICopyable<IdentifiedObject<T>>.Copy(IdentifiedObject<T>)
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable<OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>>.Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>)
  nameWithType.vb: ICopyable(Of IdentifiedObject(Of T)).Copy(IdentifiedObject(Of T))
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable(Of OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T)).Copy(OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T))
  name.vb: Copy(IdentifiedObject(Of T))
  spec.csharp:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
    name: Copy
    nameWithType: ICopyable<IdentifiedObject<T>>.Copy
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable<OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject<T>>.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
    name: IdentifiedObject
    nameWithType: IdentifiedObject
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
    name: Copy
    nameWithType: ICopyable(Of IdentifiedObject(Of T)).Copy
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable(Of OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject(Of T)).Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject`1
    name: IdentifiedObject
    nameWithType: IdentifiedObject
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.IdentifiedObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
  commentId: M:OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
  name: Copy(T)
  nameWithType: ICopyable<T>.Copy(T)
  fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable<T>.Copy(T)
  nameWithType.vb: ICopyable(Of T).Copy(T)
  fullName.vb: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable(Of T).Copy(T)
  spec.csharp:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
    name: Copy
    nameWithType: ICopyable<T>.Copy
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable<T>.Copy
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable`1.Copy(`0)
    name: Copy
    nameWithType: ICopyable(Of T).Copy
    fullName: OSDC.YPL.ModelCalibration.FromRheometer.Model.ICopyable(Of T).Copy
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
